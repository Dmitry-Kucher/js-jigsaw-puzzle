{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/CanvasLogger.js","src/classes/Composition.js","src/classes/Gamefield.js","src/classes/Gameloop.js","src/classes/Image.js","src/classes/Logger.js","src/classes/Piece.js","src/classes/RecalculatedObjectsGroup.js","src/test.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;ICAqB,Y;AACnB,wBAAY,OAAZ,EAAqB;AAAA;;AACnB,QAAM,iBAAiB,EAAvB;AACA,SAAK,OAAL,gBACK,cADL,EAEK,OAFL;AAID;;;;wBAEG,O,EAAS;AACX,UAAM,cAAc,QAAQ,QAAR,EAApB;AACA,UAAM,SAAS,KAAK,OAAL,CAAa,MAA5B;AACA,UAAM,qBAAqB,IAAI,OAAO,IAAX,CAAgB,WAAhB,EAA6B,EAAE,MAAM,OAAO,KAAP,GAAe,GAAvB,EAA4B,KAAK,EAAjC,EAA7B,CAA3B;AACA,aAAO,GAAP,CAAW,kBAAX;AACA,aAAO,SAAP;AACD;;;;;;kBAfkB,Y;;;;;;;;;ACGrB;;;;;;0JAHA;;;;;IAKqB,W,GACnB,uBAAc;AAAA;;AACZ,MAAM,SAAS,EAAf;;AAEA,OAAK,QAAL,GAAgB,UAAC,KAAD,EAAW;AACzB,QAAI,EAAE,gCAAF,CAAJ,EAA+B;AAC7B,YAAM,MAAM,kEAAN,CAAN;AACD;AACD,WAAO,IAAP,CAAY,KAAZ;AACD,GALD;;AAOA,OAAK,SAAL,GAAiB;AAAA,WAAM,MAAN;AAAA,GAAjB;AACD,C;;kBAZkB,W;;;;;;;;;;;;;ACLrB;;;IAGqB,S;AACnB,uBAAkE;AAAA,mFAAJ,EAAI;AAAA,0BAApD,KAAoD;AAAA,QAApD,KAAoD,8BAA5C,IAA4C;AAAA,2BAAtC,MAAsC;AAAA,QAAtC,MAAsC,+BAA7B,IAA6B;AAAA,6BAAvB,QAAuB;AAAA,QAAvB,QAAuB,iCAAZ,GAAY;;AAAA;;AAChE,QAAI,eAAJ;;AAEA,SAAK,QAAL,GAAgB;AAAA,aAAM,KAAN;AAAA,KAAhB;AACA,SAAK,SAAL,GAAiB;AAAA,aAAM,MAAN;AAAA,KAAjB;AACA,SAAK,WAAL,GAAmB;AAAA,aAAM,QAAN;AAAA,KAAnB;AACA,SAAK,SAAL,GAAiB,UAAC,WAAD,EAAiB;AAChC,eAAS,WAAT;AACD,KAFD;AAGA,SAAK,SAAL,GAAiB;AAAA,aAAM,MAAN;AAAA,KAAjB;;AAEA,SAAK,WAAL;AACD;;;;kCAEa;AACZ,UAAM,WAAW,KAAK,WAAL,EAAjB;AACA,UAAI,CAAC,SAAS,aAAT,OAA2B,QAA3B,CAAL,EAA6C;AAC3C,gBAAQ,GAAR,CAAY,uBAAZ;AACA;AACA,YAAM,gBAAgB,SAAS,aAAT,CAAuB,QAAvB,CAAtB;AACA,sBAAc,EAAd,GAAmB,QAAnB;AACA,sBAAc,KAAd,GAAsB,KAAK,QAAL,EAAtB;AACA,sBAAc,MAAd,GAAuB,KAAK,SAAL,EAAvB;AACA,iBAAS,IAAT,CAAc,WAAd,CAA0B,aAA1B;AACD;AACD,UAAM,SAAS,IAAI,OAAO,MAAX,CAAkB,QAAlB,EAA4B;AACzC,2BAAmB,KADsB;AAEzC,mBAAW,KAF8B;AAGzC,yBAAiB,MAHwB;AAIzC,eAAO,KAAK,QAAL,EAJkC;AAKzC,gBAAQ,KAAK,SAAL;AALiC,OAA5B,CAAf;AAOA,WAAK,SAAL,CAAe,MAAf;AACD;;;;;;kBAlCkB,S;;;;;;;;;qjBCHrB;;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEqB,Q;AACnB,oBAAY,OAAZ,EAAqB;AAAA;;AACnB,QAAI,CAAC,QAAQ,aAAb,EAA4B;AAC1B,YAAM,MAAM,+BAAN,CAAN;AACD;AACD,QAAI,eAAJ;AACA,SAAK,UAAL,GAAkB;AAAA,aAAM,OAAN;AAAA,KAAlB;;AAEA,SAAK,SAAL,GAAiB;AAAA,aAAM,MAAN;AAAA,KAAjB;AACA,SAAK,SAAL,GAAiB,UAAC,cAAD,EAAoB;AACnC,eAAS,cAAT;AACD,KAFD;AAGD;;;;4BAEO;AAAA;;AACN,aAAO,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,YAAM,UAAU,MAAK,UAAL,EAAhB;AACA,YAAM,YAAY,wBAAc;AAC9B,iBAAO,IADuB;AAE9B,kBAAQ,IAFsB;AAG9B,oBAAU,QAAQ;AAHY,SAAd,CAAlB;AAKA,YAAM,SAAS,UAAU,SAAV,EAAf;AACA,cAAK,SAAL,CAAe,MAAf;AACA,cAAK,UAAL,CAAgB,QAAQ,KAAxB;AACA,eAAO,EAAP,CAAU,iBAAV,EAA6B,YAAM;AACjC,cAAI,OAAO,QAAX,EAAqB;AACnB,gBAAM,eAAe,2BAAiB,EAAE,cAAF,EAAjB,CAArB;AACA,gBAAM,SAAS,qBAAW,EAAE,iBAAiB,YAAnB,EAAX,CAAf;AACA,gBAAM,eAAe,OAAO,eAAP,EAArB;AACA,mBAAO,GAAP,CAAW,YAAX;AACD;AACF,SAPD;AAQA,eAAO,EAAP,CAAU,iBAAV,EAA6B,YAAM;AACjC,cAAM,eAAe,OAAO,eAAP,EAArB;AACA,cAAI,wBAAwB,OAAO,IAAnC,EAAyC;AACvC;AACD;AACD,uBAAa,OAAb,CAAqB,aAArB;AACA,cAAM,yBAAyB,MAAK,aAAL,CAAmB,YAAnB,CAA/B;AACA,cAAI,WAAW,KAAf;AACA,iBAAO,aAAP,CAAqB,UAAC,SAAD,EAAe;AAClC,gBAAI,QAAJ,EAAc;AACZ;AACD;AACD,gBAAI,cAAc,YAAd,IAA8B,CAAC,YAAnC,EAAiD;AAC/C;AACD;;AAED,gBAAI,SAAS,WAAT,CAAqB,sBAArB,EAA6C,SAA7C,CAAJ,EAA6D;AAC3D,kBAAI,MAAK,SAAL,CAAe,YAAf,EAA6B,SAA7B,CAAJ,EAA6C;AAC3C,2BAAW,IAAX;AACA,sBAAK,SAAL,CAAe,YAAf,EAA6B,SAA7B;AACA,uBAAO,MAAP,CAAc,YAAd;AACA,uBAAO,MAAP,CAAc,SAAd;AACD;AACF;AACF,WAhBD;AAiBD,SAzBD;AA0BD,OA5CD;AA6CD;;;4BAEO,G,EAAK;AACX,UAAM,SAAS,KAAK,SAAL,EAAf;AACA,UAAM,OAAO,IAAI,OAAO,IAAX,CACX,m6BADW,EAEX;AACE,cAAM,IAAI,OAAO,OAAX,CAAmB;AACvB,kBAAQ;AADe,SAAnB;AADR,OAFW,CAAb;AAQA,WAAK,GAAL,CAAS,EAAE,KAAK,GAAP,EAAY,MAAM,GAAlB,EAAT;AACA,aAAO,GAAP,CAAW,IAAX;AACA,aAAO,SAAP;AACD;;;iCAEqB;AAAA,UAAX,KAAW,uEAAH,CAAG;;AACpB,UAAM,UAAU,KAAK,UAAL,EAAhB;AACA,UAAM,SAAS,KAAK,SAAL,EAAf;AACA,UAAM,QAAQ,oBAAU,QAAQ,aAAlB,CAAd;;AAEA,YAAM,kBAAN,CAAyB,EAAE,WAAW,QAAQ,IAArB,EAA2B,WAAW,QAAQ,IAA9C,EAAzB;AACA,UAAM,SAAS,MAAM,cAAN,EAAf;;AAEA,aAAO,OAAP,CAAe,UAAC,KAAD,EAAQ,aAAR,EAA0B;AACvC,YAAM,OAAO,kBAAmB,OAAO,MAAP,GAAgB,CAAhD;AACA,YAAM,eAAe,SAAS,YAAT,CAAsB,IAAtB,CAA2B,IAA3B,EAAiC,EAAE,cAAF,EAAU,UAAV,EAAgB,4BAAhB,EAA+B,YAA/B,EAAjC,CAArB;AACA;AACA,eAAO,KAAP,CAAa,OAAb,CAAqB,MAAM,UAAN,EAArB,EAAyC,YAAzC;AACA;AACD,OAND;AAOD;;;kCAoBa,U,EAAY;AACxB,UAAM,aAAa,EAAnB;AACA,UAAI,UAAJ,EAAgB;AACd,YAAI,iBAAiB,EAArB;AACA,YAAI,OAAO,WAAW,aAAlB,KAAoC,WAAxC,EAAqD;AACnD,yBAAe,IAAf,CAAoB,WAAW,aAA/B;AACD,SAFD,MAEO,IAAI,WAAW,cAAX,YAAqC,KAAzC,EAAgD;AACrD,2BAAiB,WAAW,cAA5B;AACD,SAFM,MAEA;AACL,gBAAM,MAAM,0DAAN,CAAN;AACD;AACD,YAAM,UAAU,KAAK,UAAL,EAAhB;AACA,uBAAe,OAAf,CAAuB,UAAC,aAAD,EAAmB;AACxC,cAAM,YAAY,KAAK,KAAL,CAAW,gBAAgB,QAAQ,IAAnC,CAAlB;AACA,cAAM,YAAY,gBAAgB,QAAQ,IAA1C;AACA,cAAI,cAAc,CAAlB,EAAqB;AACnB,uBAAW,IAAX,CAAiB,gBAAgB,QAAQ,IAAzC;AACD;AACD,cAAI,YAAa,QAAQ,IAAR,GAAe,CAAhC,EAAoC;AAClC,uBAAW,IAAX,CAAiB,gBAAgB,QAAQ,IAAzC;AACD;;AAED,cAAI,cAAc,CAAlB,EAAqB;AACnB,uBAAW,IAAX,CAAiB,gBAAgB,CAAjC;AACD;AACD,cAAI,YAAa,QAAQ,IAAR,GAAe,CAAhC,EAAoC;AAClC,uBAAW,IAAX,CAAiB,gBAAgB,CAAjC;AACD;AACF,SAhBD;AAiBD;AACD,aAAO,UAAP;AACD;;;8BAES,O,EAAS,S,EAAW;AAC5B,UAAM,oBAAoB,mBAAmB,OAAO,KAA1B,GAAkC,QAAQ,UAAR,EAAlC,GAAyD,CAAC,OAAD,CAAnF;AACA,UAAM,iBAAiB,qBAAqB,OAAO,KAA5B,GAAoC,UAAU,UAAV,EAApC,GAA6D,CAAC,SAAD,CAApF;;AAF4B;AAAA;AAAA;;AAAA;AAI5B,6BAAyB,iBAAzB,8HAA4C;AAAA,cAAjC,UAAiC;AAAA;AAAA;AAAA;;AAAA;AAC1C,kCAA4B,cAA5B,mIAA4C;AAAA,kBAAjC,aAAiC;;AAC1C,kBAAI,KAAK,aAAL,CAAmB,UAAnB,EAA+B,aAA/B,CAAJ,EAAmD;AACjD,uBAAO,IAAP;AACD;AACF;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3C;AAV2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW5B,aAAO,KAAP;AACD;;;kCAEa,U,EAAY,W,EAAa;AACrC,UAAM,UAAU,KAAK,UAAL,EAAhB;AACA,UAAM,qBAAqB,QAAQ,qBAAnC;AACA,UAAI,cAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAlB;AACA,UAAI,cAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAlB;AACA,UAAI,cAAc,kBAAd,IAAoC,cAAc,kBAAtD,EAA0E;AACxE,eAAO,IAAP;AACD;;AAED,oBAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAd;AACA,oBAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAd;AACA,UAAI,cAAc,kBAAd,IAAoC,cAAc,kBAAtD,EAA0E;AACxE,eAAO,IAAP;AACD;;AAED,oBAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAd;AACA,oBAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAd;AACA,UAAI,cAAc,kBAAd,IAAoC,cAAc,kBAAtD,EAA0E;AACxE,eAAO,IAAP;AACD;;AAED,oBAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAd;AACA,oBAAc,KAAK,GAAL,CAAS,WAAW,OAAX,CAAmB,EAAnB,CAAsB,CAAtB,GAA0B,YAAY,OAAZ,CAAoB,EAApB,CAAuB,CAA1D,CAAd;AACA,aAAO,cAAc,kBAAd,IAAoC,cAAc,kBAAzD;AACD;;;8BAeS,Y,EAAc,S,EAAW;AAAA;;AACjC,UAAM,SAAS,KAAK,SAAL,EAAf;AACA,UAAM,aAAa,EAAnB;AACA,UAAM,iBAAiB,EAAvB;AACA,UAAM,UAAU,KAAK,UAAL,EAAhB;AACA,UAAM,eAAe,qBAAqB,OAAO,KAA5B,GAAoC,UAAU,UAAV,EAApC,GAA6D,CAAC,SAAD,CAAlF;AACA,UAAM,gBAAgB,wBAAwB,OAAO,KAA/B,GAAuC,aAAa,UAAb,EAAvC,GAAmE,CAAC,YAAD,CAAzF;;AAEA;AACA,UAAM,cAAc,aAAa,CAAb,CAApB;;AATiC,kCAUZ,SAAS,kBAAT,CAA4B,WAA5B,EAAyC,QAAQ,IAAjD,CAVY;AAAA,UAUzB,GAVyB,yBAUzB,GAVyB;AAAA,UAUpB,GAVoB,yBAUpB,GAVoB;;AAWjC,UAAM,oBAAoB,MAAM,YAAY,QAAZ,EAAhC;AACA,UAAM,oBAAoB,MAAM,YAAY,SAAZ,EAAhC;AACA,UAAM,gBAAgB,YAAY,IAAZ,GAAmB,iBAAzC;AACA,UAAM,gBAAgB,YAAY,GAAZ,GAAkB,iBAAxC;;AAEA,UAAM,gBAAgB,SAAhB,aAAgB,CAAC,WAAD,EAAiB;AACrC,eAAK,yBAAL,CAA+B;AAC7B,eAAK,WADwB;AAE7B,sCAF6B;AAG7B;AAH6B,SAA/B;AAKA,uBAAe,IAAf,CAAoB,YAAY,aAAhC;AACA,mBAAW,IAAX,CAAgB,WAAhB;AACD,OARD;;AAUA,oBAAc,OAAd,CAAsB,aAAtB;AACA,mBAAa,OAAb,CAAqB,aAArB;;AAEA,UAAM,yBAAyB,uCAA6B,UAA7B,EAAyC;AACtE,qBAAa,KADyD;AAEtE,oBAAY;AAF0D,OAAzC,CAA/B;AAIA,6BAAuB,GAAvB,CAA2B,gBAA3B,EAA6C,cAA7C;AACA,aAAO,GAAP,CAAW,sBAAX;AACA,aAAO,SAAP;;AAEA;AACA;AACA,6BAAuB,OAAvB,CAA+B,UAA/B;AACA,6BAAuB,OAAvB,CAA+B,aAA/B;AACD;;;oDAEgE;AAAA,UAArC,GAAqC,QAArC,GAAqC;AAAA,UAAhC,aAAgC,QAAhC,aAAgC;AAAA,UAAjB,aAAiB,QAAjB,aAAiB;;AAC/D,UAAM,UAAU,KAAK,UAAL,EAAhB;;AAD+D,mCAE1C,SAAS,kBAAT,CAA4B,GAA5B,EAAiC,QAAQ,IAAzC,CAF0C;AAAA,UAEvD,GAFuD,0BAEvD,GAFuD;AAAA,UAElD,GAFkD,0BAElD,GAFkD;;AAG/D,UAAM,sBAAsB,MAAM,IAAI,SAAJ,EAAlC;AACA,UAAM,uBAAuB,MAAM,IAAI,QAAJ,EAAnC;AACA,UAAM,kBAAkB,sBAAsB,aAA9C;AACA,UAAM,mBAAmB,uBAAuB,aAAhD;AACA,UAAI,MAAJ,CAAW,eAAX;AACA,UAAI,OAAJ,CAAY,gBAAZ;AACA,UAAI,SAAJ;AACD;;;iCA7JmB,gB,EAAkB,G,EAAK;AAAA,UACjC,MADiC,GACM,gBADN,CACjC,MADiC;AAAA,UACzB,IADyB,GACM,gBADN,CACzB,IADyB;AAAA,UACnB,aADmB,GACM,gBADN,CACnB,aADmB;AAAA,UACJ,KADI,GACM,gBADN,CACJ,KADI;;AAEzC,UAAM,MAAM,OAAO,IAAP,CAAY,YAAZ,CAAyB,CAAzB,EAA4B,GAA5B,CAAZ;AACA,UAAM,OAAO,OAAO,IAAP,CAAY,YAAZ,CAAyB,CAAzB,EAA4B,GAA5B,CAAb;;AAEA,UAAI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACA,UAAI,GAAJ,CAAQ,YAAR,EAAsB,KAAtB;AACA,UAAI,GAAJ,CAAQ,KAAR,EAAe,GAAf;AACA,UAAI,GAAJ,CAAQ,MAAR,EAAgB,IAAhB;AACA,UAAI,GAAJ,CAAQ,eAAR,EAAyB,aAAzB;AACA,UAAI,KAAJ,CAAU,KAAV;;AAEA,aAAO,GAAP,CAAW,GAAX;AACA,UAAI,IAAJ,EAAU;AACR,eAAO,SAAP;AACD;AACF;;;gCA2EkB,sB,EAAwB,S,EAAW;AACpD,UAAI,qBAAqB,OAAO,KAAhC,EAAuC;AAAA;AAAA;AAAA;;AAAA;AACrC,gCAA4B,UAAU,UAAV,EAA5B,mIAAoD;AAAA,gBAAzC,aAAyC;;AAClD,gBAAI,uBAAuB,OAAvB,CAA+B,cAAc,aAA7C,MAAgE,CAAC,CAArE,EAAwE;AACtE,qBAAO,IAAP;AACD;AACF;AALoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtC,OAND,MAMO,IAAI,OAAO,UAAU,aAAjB,KAAmC,WAAvC,EAAoD;AACzD,eAAO,uBAAuB,OAAvB,CAA+B,UAAU,aAAzC,MAA4D,CAAC,CAApE;AACD;AACD,aAAO,KAAP;AACD;;;uCAyDyB,G,EAAK,I,EAAM;AACnC,UAAM,MAAM,IAAI,aAAJ,GAAoB,IAAhC;AACA,UAAM,MAAM,KAAK,KAAL,CAAW,IAAI,aAAJ,GAAoB,IAA/B,CAAZ;AACA,aAAO,EAAE,QAAF,EAAO,QAAP,EAAP;AACD;;;;;;kBAjQkB,Q;;;;;;;;;qjBCTrB;;;;;AAGA;;;;AACA;;;;;;;;IAEqB,K;AACnB,iBAAY,QAAZ,EAAsB;AAAA;;AACpB,QAAM,wBAAsB,QAA5B;AACA,SAAK,YAAL,GAAoB,SAAS,aAAT,CAAuB,aAAvB,CAApB;AACA,QAAI,CAAC,KAAK,YAAV,EAAwB;AACtB,YAAM,0DAAwD,aAAxD,CAAN;AACD;;AAED,SAAK,aAAL,GAAqB,KAAK,sBAAL,EAArB;AACA,SAAK,WAAL,GAAmB,2BAAnB;AACD;;;;6CAEwB;AACvB,aAAO,KAAK,aAAL,IAAsB,IAAI,OAAO,KAAX,CAAiB,KAAK,YAAtB,CAA7B;AACD;;;yCAEyD;AAAA,qFAAJ,EAAI;AAAA,gCAArC,SAAqC;AAAA,UAArC,SAAqC,kCAAzB,CAAyB;AAAA,gCAAtB,SAAsB;AAAA,UAAtB,SAAsB,kCAAV,CAAU;;AACxD,UAAM,UAAU,KAAK,aAAL,CAAmB,QAAnB,KAAgC,SAAhD;AACA,UAAM,UAAU,KAAK,aAAL,CAAmB,SAAnB,KAAiC,SAAjD;AACA,WAAK,IAAI,MAAM,CAAf,EAAkB,MAAM,SAAxB,EAAmC,OAAO,CAA1C,EAA6C;AAC3C,aAAK,IAAI,MAAM,CAAf,EAAkB,MAAM,SAAxB,EAAmC,OAAO,CAA1C,EAA6C;AAC3C,cAAM,UAAU,KAAK,aAAL,CAAmB,SAAnB,CAA6B;AAC3C,kBAAM,UAAU,GAD2B;AAE3C,iBAAK,UAAU,GAF4B;AAG3C,mBAAO,OAHoC;AAI3C,oBAAQ;AAJmC,WAA7B,CAAhB;AAMA,cAAM,eAAe;AACnB,qBAAS,OADU;AAEnB,sBAAU,MAAM;AAFG,WAArB;AAIA,cAAM,QAAQ,oBAAU,YAAV,CAAd;AACA,eAAK,WAAL,CAAiB,QAAjB,CAA0B,KAA1B;AACD;AACF;AACF;;;qCAEgB;AACf,aAAO,KAAK,WAAL,CAAiB,SAAjB,EAAP;AACD;;;sCAEiB;AAChB,aAAO,KAAK,YAAZ;AACD;;;;;;kBA3CkB,K;;;;;;;;;;;;;;;ICNA,M;AACnB,kBAAY,OAAZ,EAAqB;AAAA;;AACnB,QAAM,iBAAiB;AACrB,uBAAiB;AADI,KAAvB;AAGA,SAAK,OAAL,gBACK,cADL,EAEK,OAFL;AAID;;;;wBAEG,O,EAAS;AACX,WAAK,OAAL,CAAa,eAAb,CAA6B,GAA7B,CAAiC,OAAjC;AACD;;;;;;kBAbkB,M;;;;;;;;;;;;;ACArB;;;IAGqB,K;AACnB,mBAAwC;AAAA,mFAAJ,EAAI;AAAA,QAA1B,OAA0B,QAA1B,OAA0B;AAAA,QAAjB,QAAiB,QAAjB,QAAiB;;AAAA;;AACtC,QAAI,OAAO,OAAP,KAAmB,WAAnB,IAAkC,OAAO,QAAP,KAAoB,WAA1D,EAAuE;AACrE,YAAM,MAAM,qCAAN,CAAN;AACD;AACD,SAAK,UAAL,GAAkB;AAAA,aAAM,OAAN;AAAA,KAAlB;AACA,SAAK,WAAL,GAAmB;AAAA,aAAM,QAAN;AAAA,KAAnB;AACA,WAAO,KAAK,UAAL,EAAP;AACD;;;;2BAEM,I,EAAM;AACX,aAAO,KAAK,KAAL,CAAW,KAAK,WAAL,KAAqB,IAAhC,CAAP;AACD;;;2BAEM,I,EAAM;AACX,aAAO,KAAK,WAAL,KAAqB,IAA5B;AACD;;;;;;kBAhBkB,K;;;;;;;;;;;;;ACHrB;;;IAGqB,wB;AACnB,oCAAY,UAAZ,EAAsC;AAAA,QAAd,OAAc,uEAAJ,EAAI;;AAAA;;AACpC,QAAI,CAAC,MAAM,OAAN,CAAc,UAAd,CAAL,EAAgC;AAC9B,YAAM,MAAM,8BAAN,CAAN;AACD;AACD,QAAM,QAAQ,IAAI,OAAO,KAAX,CAAiB,UAAjB,EAA6B,OAA7B,CAAd;AACA,UAAM,EAAN,CAAS,UAAT,EAAqB,KAAK,UAA1B;AACA,UAAM,EAAN,CAAS,aAAT,EAAwB,KAAK,UAA7B;;AAEA,UAAM,kBAAN,GAA2B,KAAK,kBAAhC;AACA,UAAM,UAAN,GAAmB,KAAK,UAAxB;AACA,WAAO,KAAP;AACD;;;;iCAEY;AACX,WAAK,WAAL,GAAmB,KAAK,GAAxB;AACA,WAAK,YAAL,GAAoB,KAAK,IAAzB;AACD;;;iCAEY;AAAA;;AACX,UAAM,eAAe,KAAK,UAAL,EAArB;AACA,mBAAa,OAAb,CAAqB,UAAC,SAAD,EAAe;AAClC,cAAK,kBAAL,CAAwB,SAAxB;AACD,OAFD;AAGD;;;uCAEkB,I,EAAM;AACvB,UAAM,SAAS,EAAf;AACA,UAAM,aAAa,KAAK,OAAxB;AACA,UAAM,IAAI,KAAK,IAAL,GAAY,KAAK,YAA3B;AACA,UAAM,IAAI,KAAK,GAAL,GAAW,KAAK,WAA1B;AACA,UAAM,SAAS,EAAE,IAAF,EAAK,IAAL,EAAf;;AAEA,aAAO,EAAP,GAAY,IAAI,OAAO,KAAX,CAAiB,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAA1C,EAA6C,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAAtE,CAAZ;AACA,aAAO,EAAP,GAAY,IAAI,OAAO,KAAX,CAAiB,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAA1C,EAA6C,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAAtE,CAAZ;AACA,aAAO,EAAP,GAAY,IAAI,OAAO,KAAX,CAAiB,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAA1C,EAA6C,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAAtE,CAAZ;AACA,aAAO,EAAP,GAAY,IAAI,OAAO,KAAX,CAAiB,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAA1C,EAA6C,WAAW,EAAX,CAAc,CAAd,GAAkB,OAAO,CAAtE,CAAZ;AACA,WAAK,OAAL,GAAe,MAAf;AACA,WAAK,GAAL,GAAW,OAAO,EAAP,CAAU,CAArB;AACA,WAAK,IAAL,GAAY,OAAO,EAAP,CAAU,CAAtB;AACD;;;;;;kBAxCkB,wB;;;;;ACArB;;;;;;AAEA,IAAM,UAAU;AACd,YAAU,GADI;AAEd,QAAM,CAFQ;AAGd,QAAM,CAHQ;AAId,SAAO,GAJO;AAKd,iBAAe,aALD;AAMd,yBAAuB;AANT,CAAhB,C,CALA;;;;AAaA,IAAM,WAAW,uBAAa,OAAb,CAAjB;;AAEA,SAAS,KAAT","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default class CanvasLogger {\n  constructor(options) {\n    const defaultOptions = {};\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n  }\n\n  log(message) {\n    const textMessage = message.toString();\n    const canvas = this.options.canvas;\n    const fabricjsTextObject = new fabric.Text(textMessage, { left: canvas.width - 100, top: 10 });\n    canvas.add(fabricjsTextObject);\n    canvas.renderAll();\n  }\n}\n","/**\n * Created by dima on 02/07/2017.\n */\nimport Piece from './Piece';\n\nexport default class Composition {\n  constructor() {\n    const pieces = [];\n\n    this.addPiece = (piece) => {\n      if (!(piece instanceof Piece)) {\n        throw Error('Composition can`t store anything except except instance of Piece');\n      }\n      pieces.push(piece);\n    };\n\n    this.getPieces = () => pieces;\n  }\n}\n","/**\n * Created by dima on 02/07/2017.\n */\nexport default class Gamefield {\n  constructor({ width = 1024, height = 1024, canvasId = 'c' } = {}) {\n    let canvas;\n\n    this.getWidth = () => width;\n    this.getHeight = () => height;\n    this.getCanvasId = () => canvasId;\n    this.setCanvas = (canvasField) => {\n      canvas = canvasField;\n    };\n    this.getCanvas = () => canvas;\n\n    this.createField();\n  }\n\n  createField() {\n    const canvasId = this.getCanvasId();\n    if (!document.querySelector(`#${canvasId}`)) {\n      console.log('canvas doesn`t exists');\n      // create canvas element if it doesn't exists;\n      const canvasElement = document.createElement('canvas');\n      canvasElement.id = canvasId;\n      canvasElement.width = this.getWidth();\n      canvasElement.height = this.getHeight();\n      document.body.appendChild(canvasElement);\n    }\n    const canvas = new fabric.Canvas(canvasId, {\n      renderOnAddRemove: false,\n      selection: false,\n      backgroundColor: '#0f0',\n      width: this.getWidth(),\n      height: this.getHeight(),\n    });\n    this.setCanvas(canvas);\n  }\n}\n","/**\n * Created by dima on 02/07/2017.\n */\nimport Image from './Image';\nimport Gamefield from './Gamefield';\nimport RecalculatedObjectsGroup from './RecalculatedObjectsGroup';\nimport CanvasLogger from './CanvasLogger';\nimport Logger from './Logger';\n\nexport default class Gameloop {\n  constructor(options) {\n    if (!options.imageSelector) {\n      throw Error('image selector is not defined');\n    }\n    let canvas;\n    this.getOptions = () => options;\n\n    this.getCanvas = () => canvas;\n    this.setCanvas = (internalCanvas) => {\n      canvas = internalCanvas;\n    };\n  }\n\n  start() {\n    window.addEventListener('load', () => {\n      const options = this.getOptions();\n      const gameField = new Gamefield({\n        width: 1420,\n        height: 2048,\n        canvasId: options.canvasId,\n      });\n      const canvas = gameField.getCanvas();\n      this.setCanvas(canvas);\n      this.drawPieces(options.scale);\n      canvas.on('object:selected', () => {\n        if (window.debugApp) {\n          const canvasLogger = new CanvasLogger({ canvas });\n          const logger = new Logger({ loggerInterface: canvasLogger });\n          const activeObject = canvas.getActiveObject();\n          logger.log(activeObject);\n        }\n      });\n      canvas.on('object:modified', () => {\n        const activeObject = canvas.getActiveObject();\n        if (activeObject instanceof fabric.Path) {\n          return;\n        }\n        activeObject.trigger('recalculate');\n        const activeObjectNeighbours = this.getNeighbours(activeObject);\n        let isMerged = false;\n        canvas.forEachObject((potential) => {\n          if (isMerged) {\n            return;\n          }\n          if (potential === activeObject || !activeObject) {\n            return;\n          }\n\n          if (Gameloop.isNeighbour(activeObjectNeighbours, potential)) {\n            if (this.isClosest(activeObject, potential)) {\n              isMerged = true;\n              this.drawGroup(activeObject, potential);\n              canvas.remove(activeObject);\n              canvas.remove(potential);\n            }\n          }\n        });\n      });\n    });\n  }\n\n  drawSvg(img) {\n    const canvas = this.getCanvas();\n    const path = new fabric.Path(\n      'M85.446,52.284c-3.901,0-5.223-2.17-5.773-3.058c-1.146-1.85-3.291-3.455-5.469-4.268c-1.049-0.251-2.159,0.377-2.165,2.342  v24.737h-0.001v0.001H46.287c-1.978,0.002-2.604,1.122-2.347,2.177c0.815,2.173,2.418,4.312,4.264,5.457  c0.889,0.551,3.058,1.872,3.058,5.772c0,5.277-5.934,9.555-13.253,9.555c-7.32,0-13.254-4.277-13.254-9.555  c0-3.901,2.17-5.222,3.059-5.772c1.848-1.147,3.453-3.291,4.268-5.469c0.249-1.049-0.379-2.159-2.342-2.165H5V47.314  c0-1.977,1.114-2.606,2.166-2.355c2.178,0.812,4.322,2.418,5.47,4.268c0.551,0.888,1.871,3.058,5.772,3.058  c5.278,0,9.556-5.934,9.556-13.254c0-7.319-4.277-13.253-9.556-13.253c-3.901,0-5.222,2.17-5.772,3.059  c-1.146,1.845-3.284,3.447-5.458,4.263C6.122,33.356,5,32.727,5,30.745V5h67.038v0.001L72.039,5v25.759  c0.006,1.97,1.124,2.597,2.177,2.34c2.173-0.815,4.312-2.418,5.457-4.263c0.551-0.889,1.872-3.059,5.773-3.059  c5.276,0,9.554,5.934,9.554,13.253C95,46.351,90.723,52.284,85.446,52.284z',\n      {\n        fill: new fabric.Pattern({\n          source: img,\n        }),\n      },\n    );\n    path.set({ top: 150, left: 150 });\n    canvas.add(path);\n    canvas.renderAll();\n  }\n\n  drawPieces(scale = 1) {\n    const options = this.getOptions();\n    const canvas = this.getCanvas();\n    const image = new Image(options.imageSelector);\n\n    image.splitImageToPieces({ colLength: options.cols, rowLength: options.rows });\n    const pieces = image.getImagePieces();\n\n    pieces.forEach((piece, piecePosition) => {\n      const last = piecePosition === (pieces.length - 1);\n      const drawCallback = Gameloop.drawCallback.bind(null, { canvas, last, piecePosition, scale });\n      // const drawSvg = this.drawSvg.bind(this);\n      fabric.Image.fromURL(piece.getContent(), drawCallback);\n      // fabric.util.loadImage(piece.getContent(), drawSvg);\n    });\n  }\n\n  static drawCallback(additionalParams, img) {\n    const { canvas, last, piecePosition, scale } = additionalParams;\n    const top = fabric.util.getRandomInt(0, 300);\n    const left = fabric.util.getRandomInt(0, 300);\n\n    img.set('hasControls', false);\n    img.set('hasBorders', false);\n    img.set('top', top);\n    img.set('left', left);\n    img.set('piecePosition', piecePosition);\n    img.scale(scale);\n\n    canvas.add(img);\n    if (last) {\n      canvas.renderAll();\n    }\n  }\n\n  getNeighbours(examObject) {\n    const neighbours = [];\n    if (examObject) {\n      let piecePositions = [];\n      if (typeof examObject.piecePosition !== 'undefined') {\n        piecePositions.push(examObject.piecePosition);\n      } else if (examObject.piecePositions instanceof Array) {\n        piecePositions = examObject.piecePositions;\n      } else {\n        throw Error('examObject doesn`t contain any info about piece position');\n      }\n      const options = this.getOptions();\n      piecePositions.forEach((piecePosition) => {\n        const actualRow = Math.floor(piecePosition / options.cols);\n        const actualCol = piecePosition % options.cols;\n        if (actualRow !== 0) {\n          neighbours.push((piecePosition - options.cols));\n        }\n        if (actualRow < (options.rows - 1)) {\n          neighbours.push((piecePosition + options.cols));\n        }\n\n        if (actualCol !== 0) {\n          neighbours.push((piecePosition - 1));\n        }\n        if (actualCol < (options.cols - 1)) {\n          neighbours.push((piecePosition + 1));\n        }\n      });\n    }\n    return neighbours;\n  }\n\n  isClosest(current, potential) {\n    const activeObjectItems = current instanceof fabric.Group ? current.getObjects() : [current];\n    const potentialItems = potential instanceof fabric.Group ? potential.getObjects() : [potential];\n\n    for (const activeItem of activeObjectItems) {\n      for (const potentialItem of potentialItems) {\n        if (this.isPiecesClose(activeItem, potentialItem)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  isPiecesClose(firstPiece, secondPiece) {\n    const options = this.getOptions();\n    const closestSensitivity = options.neighboursSensitivity;\n    let xDifference = Math.abs(firstPiece.aCoords.tr.x - secondPiece.aCoords.tl.x);\n    let yDifference = Math.abs(firstPiece.aCoords.tr.y - secondPiece.aCoords.tl.y);\n    if (xDifference < closestSensitivity && yDifference < closestSensitivity) {\n      return true;\n    }\n\n    xDifference = Math.abs(firstPiece.aCoords.tl.x - secondPiece.aCoords.tr.x);\n    yDifference = Math.abs(firstPiece.aCoords.tl.y - secondPiece.aCoords.tr.y);\n    if (xDifference < closestSensitivity && yDifference < closestSensitivity) {\n      return true;\n    }\n\n    xDifference = Math.abs(firstPiece.aCoords.bl.x - secondPiece.aCoords.tl.x);\n    yDifference = Math.abs(firstPiece.aCoords.bl.y - secondPiece.aCoords.tl.y);\n    if (xDifference < closestSensitivity && yDifference < closestSensitivity) {\n      return true;\n    }\n\n    xDifference = Math.abs(firstPiece.aCoords.tl.x - secondPiece.aCoords.bl.x);\n    yDifference = Math.abs(firstPiece.aCoords.tl.y - secondPiece.aCoords.bl.y);\n    return xDifference < closestSensitivity && yDifference < closestSensitivity;\n  }\n\n  static isNeighbour(activeObjectNeighbours, potential) {\n    if (potential instanceof fabric.Group) {\n      for (const potentialItem of potential.getObjects()) {\n        if (activeObjectNeighbours.indexOf(potentialItem.piecePosition) !== -1) {\n          return true;\n        }\n      }\n    } else if (typeof potential.piecePosition !== 'undefined') {\n      return activeObjectNeighbours.indexOf(potential.piecePosition) !== -1;\n    }\n    return false;\n  }\n\n  drawGroup(activeObject, potential) {\n    const canvas = this.getCanvas();\n    const groupItems = [];\n    const piecePositions = [];\n    const options = this.getOptions();\n    const baseElements = potential instanceof fabric.Group ? potential.getObjects() : [potential];\n    const activeObjects = activeObject instanceof fabric.Group ? activeObject.getObjects() : [activeObject];\n\n    // baseElement is the potential element itself or first element from group;\n    const baseElement = baseElements[0];\n    const { col, row } = Gameloop.extractCoordinates(baseElement, options.cols);\n    const zeroDisplacementX = col * baseElement.getWidth();\n    const zeroDisplacementY = row * baseElement.getHeight();\n    const xDisplacement = baseElement.left - zeroDisplacementX;\n    const yDisplacement = baseElement.top - zeroDisplacementY;\n\n    const itemDecompose = (activePiece) => {\n      this.recalculatePiecePositions({\n        obj: activePiece,\n        xDisplacement,\n        yDisplacement,\n      });\n      piecePositions.push(activePiece.piecePosition);\n      groupItems.push(activePiece);\n    };\n\n    activeObjects.forEach(itemDecompose);\n    baseElements.forEach(itemDecompose);\n\n    const itemsRecalculableGroup = new RecalculatedObjectsGroup(groupItems, {\n      hasControls: false,\n      hasBorders: false,\n    });\n    itemsRecalculableGroup.set('piecePositions', piecePositions);\n    canvas.add(itemsRecalculableGroup);\n    canvas.renderAll();\n\n    // recalculated group objects coordinates\n    // it prevents to disappearing group object after merge\n    itemsRecalculableGroup.trigger('selected');\n    itemsRecalculableGroup.trigger('recalculate');\n  }\n\n  recalculatePiecePositions({ obj, xDisplacement, yDisplacement }) {\n    const options = this.getOptions();\n    const { col, row } = Gameloop.extractCoordinates(obj, options.cols);\n    const zeroDisplacementTop = row * obj.getHeight();\n    const zeroDisplacementLeft = col * obj.getWidth();\n    const recalculatedTop = zeroDisplacementTop + yDisplacement;\n    const recalculatedLeft = zeroDisplacementLeft + xDisplacement;\n    obj.setTop(recalculatedTop);\n    obj.setLeft(recalculatedLeft);\n    obj.setCoords();\n  }\n\n  static extractCoordinates(obj, cols) {\n    const col = obj.piecePosition % cols;\n    const row = Math.floor(obj.piecePosition / cols);\n    return { col, row };\n  }\n}\n","/**\n * Created by dima on 09/06/2017.\n */\nimport Piece from './Piece';\nimport Composition from './Composition';\n\nexport default class Image {\n  constructor(selector) {\n    const imageSelector = `img${selector}`;\n    this.imageElement = document.querySelector(imageSelector);\n    if (!this.imageElement) {\n      throw Error(`There is no img element with provided selector ${imageSelector}`);\n    }\n\n    this.imageInstance = this.getFabricImageInstance();\n    this.imagePieces = new Composition();\n  }\n\n  getFabricImageInstance() {\n    return this.imageInstance || new fabric.Image(this.imageElement);\n  }\n\n  splitImageToPieces({ colLength = 6, rowLength = 6 } = {}) {\n    const colSize = this.imageInstance.getWidth() / colLength;\n    const rowSize = this.imageInstance.getHeight() / rowLength;\n    for (let row = 0; row < rowLength; row += 1) {\n      for (let col = 0; col < colLength; col += 1) {\n        const dataUrl = this.imageInstance.toDataURL({\n          left: colSize * col,\n          top: rowSize * row,\n          width: colSize,\n          height: rowSize,\n        });\n        const pieceOptions = {\n          content: dataUrl,\n          position: row * col,\n        };\n        const piece = new Piece(pieceOptions);\n        this.imagePieces.addPiece(piece);\n      }\n    }\n  }\n\n  getImagePieces() {\n    return this.imagePieces.getPieces();\n  }\n\n  getImageElement() {\n    return this.imageElement;\n  }\n}\n","export default class Logger {\n  constructor(options) {\n    const defaultOptions = {\n      loggerInterface: console,\n    };\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n  }\n\n  log(message) {\n    this.options.loggerInterface.log(message);\n  }\n}\n","/**\n * Created by dima on 02/07/2017.\n */\nexport default class Piece {\n  constructor({ content, position } = {}) {\n    if (typeof content === 'undefined' || typeof position === 'undefined') {\n      throw Error('piece required content and position');\n    }\n    this.getContent = () => content;\n    this.getPosition = () => position;\n    return this.getContent();\n  }\n\n  getRow(cols) {\n    return Math.floor(this.getPosition() / cols);\n  }\n\n  getCol(cols) {\n    return this.getPosition() % cols;\n  }\n}\n","/**\n * Created by dima on 07/07/2017.\n */\nexport default class RecalculatedObjectsGroup {\n  constructor(groupItems, options = {}) {\n    if (!Array.isArray(groupItems)) {\n      throw Error('Group Items must be an array');\n    }\n    const group = new fabric.Group(groupItems, options);\n    group.on('selected', this.onSelected);\n    group.on('recalculate', this.onModified);\n\n    group.recalculateACoords = this.recalculateACoords;\n    group.onModified = this.onModified;\n    return group;\n  }\n\n  onSelected() {\n    this.selectedTop = this.top;\n    this.selectedLeft = this.left;\n  }\n\n  onModified() {\n    const groupObjects = this.getObjects();\n    groupObjects.forEach((groupItem) => {\n      this.recalculateACoords(groupItem);\n    });\n  }\n\n  recalculateACoords(item) {\n    const coords = {};\n    const itemCoords = item.aCoords;\n    const x = this.left - this.selectedLeft;\n    const y = this.top - this.selectedTop;\n    const offset = { x, y };\n\n    coords.tr = new fabric.Point(itemCoords.tr.x + offset.x, itemCoords.tr.y + offset.y);\n    coords.tl = new fabric.Point(itemCoords.tl.x + offset.x, itemCoords.tl.y + offset.y);\n    coords.br = new fabric.Point(itemCoords.br.x + offset.x, itemCoords.br.y + offset.y);\n    coords.bl = new fabric.Point(itemCoords.bl.x + offset.x, itemCoords.bl.y + offset.y);\n    item.aCoords = coords;\n    item.top = coords.tl.y;\n    item.left = coords.tl.x;\n  }\n}\n","/**\n * Created by dima on 18/05/2017.\n */\nimport Gameloop from './classes/Gameloop';\n\nconst options = {\n  canvasId: 'c',\n  rows: 6,\n  cols: 6,\n  scale: 0.8,\n  imageSelector: '[jjp-image]',\n  neighboursSensitivity: 20,\n};\nconst gameLoop = new Gameloop(options);\n\ngameLoop.start();\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}