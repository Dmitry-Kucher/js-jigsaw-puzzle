{"version":3,"sources":["classes/Pieces.js"],"names":["Pieces","pieces","Object","create","piece","piecePosition","keys","length","setPosition","Error","colLength","currentElementPosition","targetElementPosition","params","isVerticalNeighbours","isHorizontalNeighbours","positionsDiff","Math","abs","currentElementPositionRemainder","targetElementPositionRemainder"],"mappings":";;;;;;qjBAAA;;;;;AAGA;;;;;;;;IAEqBA,M;AACnB,oBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAcC,OAAOC,MAAP,CAAc,IAAd,CAAd,CADY,CACsB;AACnC;;;;6BAEQC,K,EAAO;AACd,UAAIA,gCAAJ,EAA4B;AAC1B,YAAMC,gBAAgBH,OAAOI,IAAP,CAAY,KAAKL,MAAjB,EAAyBM,MAA/C;AACAH,cAAMI,WAAN,CAAkBH,aAAlB;AACA,aAAKJ,MAAL,CAAYI,aAAZ,IAA6BD,KAA7B;AACD,OAJD,MAIO;AACL,cAAM,IAAIK,KAAJ,CAAU,gCAAV,CAAN;AACD;AACF;;;gCAiCW;AACV,aAAO,KAAKR,MAAZ;AACD;;;uCAjCiF;AAAA,UAA5DS,SAA4D,QAA5DA,SAA4D;AAAA,UAAjDC,sBAAiD,QAAjDA,sBAAiD;AAAA,UAAzBC,qBAAyB,QAAzBA,qBAAyB;;AAChF,UAAMC,SAAS;AACbH,4BADa;AAEbC,sDAFa;AAGbC;AAHa,OAAf;AAKA,aAAOZ,OAAOc,oBAAP,CAA4BD,MAA5B,KAAuCb,OAAOe,sBAAP,CAA8BF,MAA9B,CAA9C;AACD;;;gDAEyF;AAAA,UAA5DH,SAA4D,SAA5DA,SAA4D;AAAA,UAAjDC,sBAAiD,SAAjDA,sBAAiD;AAAA,UAAzBC,qBAAyB,SAAzBA,qBAAyB;;AACxF,UAAMI,gBAAgBC,KAAKC,GAAL,CAASP,yBAAyBC,qBAAlC,CAAtB;;AAEA,aAAOI,kBAAkBN,SAAzB;AACD;;;kDAE2F;AAAA,UAA5DA,SAA4D,SAA5DA,SAA4D;AAAA,UAAjDC,sBAAiD,SAAjDA,sBAAiD;AAAA,UAAzBC,qBAAyB,SAAzBA,qBAAyB;;AAC1F,UAAMI,gBAAgBC,KAAKC,GAAL,CAASP,yBAAyBC,qBAAlC,CAAtB;;AAEA,UAAII,kBAAkB,CAAtB,EAAyB;AACvB,YAAIL,yBAAyBC,qBAAzB,GAAiD,CAArD,EAAwD;AACtD,cAAMO,kCAAkCR,yBAAyBD,SAAjE;AACA,iBAAOS,oCAAoC,CAA3C;AACD;;AAED,YAAMC,iCAAiCR,wBAAwBF,SAA/D;AACA,eAAOU,mCAAmC,CAA1C;AACD;;AAED,aAAO,KAAP;AACD;;;;;;kBA5CkBpB,M","file":"Pieces.js","sourcesContent":["/**\n * Created by dima on 27/05/2017.\n */\nimport Piece from './Piece';\n\nexport default class Pieces {\n  constructor() {\n    this.pieces = Object.create(null);// collection of pieces\n  }\n\n  addPiece(piece) {\n    if (piece instanceof Piece) {\n      const piecePosition = Object.keys(this.pieces).length;\n      piece.setPosition(piecePosition);\n      this.pieces[piecePosition] = piece;\n    } else {\n      throw new Error('Piece isn\\'t instance of Piece');\n    }\n  }\n\n  static isNeighbours({ colLength, currentElementPosition, targetElementPosition }) {\n    const params = {\n      colLength,\n      currentElementPosition,\n      targetElementPosition,\n    };\n    return Pieces.isVerticalNeighbours(params) || Pieces.isHorizontalNeighbours(params);\n  }\n\n  static isVerticalNeighbours({ colLength, currentElementPosition, targetElementPosition }) {\n    const positionsDiff = Math.abs(currentElementPosition - targetElementPosition);\n\n    return positionsDiff === colLength;\n  }\n\n  static isHorizontalNeighbours({ colLength, currentElementPosition, targetElementPosition }) {\n    const positionsDiff = Math.abs(currentElementPosition - targetElementPosition);\n\n    if (positionsDiff === 1) {\n      if (currentElementPosition - targetElementPosition > 0) {\n        const currentElementPositionRemainder = currentElementPosition % colLength;\n        return currentElementPositionRemainder !== 0;\n      }\n\n      const targetElementPositionRemainder = targetElementPosition % colLength;\n      return targetElementPositionRemainder !== 0;\n    }\n\n    return false;\n  }\n\n  getPieces() {\n    return this.pieces;\n  }\n}\n"]}