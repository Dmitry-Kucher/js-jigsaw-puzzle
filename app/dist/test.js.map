{"version":3,"sources":["test.js"],"names":["document","addEventListener","collisionValue","canvas","fabric","Canvas","renderOnAddRemove","backgroundColor","imageSelector","image","colLength","rowLength","i","splitImageToPieces","pieces","getImagePieces","piecesLength","Object","keys","length","piecePosition","piece","last","drawCallback","bind","Image","fromURL","getContent","on","forEachObject","targ","activeObject","getActiveObject","positionsData","currentElementPosition","targetElementPosition","left","top","groupLeft","groupTop","isHorizontalNeighbours","verticalDiff","Math","abs","aCoords","tl","y","verticalPercent","height","fromLeft","tr","x","fromRight","width","isVerticalNeighbours","horizontalDiff","horizontalPercent","fromTop","bl","fromBottom","testGroup","Group","hasControls","add","remove"],"mappings":"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","file":"test.js","sourcesContent":["/**\n * Created by dima on 18/05/2017.\n */\nimport Image from './classes/Image';\nimport Piece from './classes/Piece';\nimport Pieces from './classes/Pieces';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const collisionValue = 48;\n  const canvas = new fabric.Canvas('c', {\n    renderOnAddRemove: false,\n    backgroundColor: '#0f0',\n  });\n\n  const imageSelector = '[jjp-image]';\n  const image = new Image(imageSelector);\n  const colLength = 8;\n  const rowLength = 8;\n\n  let i = 0;\n  image.splitImageToPieces({ colLength, rowLength });\n  const pieces = image.getImagePieces();\n  const piecesLength = Object.keys(pieces).length;\n  for (const piecePosition in pieces) {\n    const piece = pieces[piecePosition];\n    const last = (i === (piecesLength - 1));\n    i += 1;\n\n    const drawCallback = Piece.drawCallback.bind(null, { canvas, last, piecePosition });\n\n    fabric.Image.fromURL(piece.getContent(), drawCallback);\n  }\n\n  canvas.on('object:modified', () => {\n    canvas.forEachObject((targ) => {\n      const activeObject = canvas.getActiveObject();\n      if (targ === activeObject || !activeObject) {\n        return;\n      }\n      const positionsData = {\n        colLength,\n        currentElementPosition: activeObject.piecePosition,\n        targetElementPosition: targ.piecePosition,\n      };\n\n      let left;\n      let top;\n      let groupLeft;\n      let groupTop;\n      if (Pieces.isHorizontalNeighbours(positionsData)) {\n        const verticalDiff = Math.abs(activeObject.aCoords.tl.y - targ.aCoords.tl.y);\n        const verticalPercent = 50;\n\n        if (verticalDiff < (verticalPercent / 100) * activeObject.height) {\n          const fromLeft = Math.abs(activeObject.aCoords.tr.x - targ.aCoords.tl.x);\n          const fromRight = Math.abs(activeObject.aCoords.tl.x - targ.aCoords.tr.x);\n\n          if (fromLeft < collisionValue) {\n            left = targ.aCoords.tl.x - activeObject.width;\n            top = targ.aCoords.tl.y;\n            groupLeft = left;\n            groupTop = top;\n          } else if (fromRight < collisionValue) {\n            left = targ.aCoords.tr.x;\n            top = targ.aCoords.tl.y;\n            groupLeft = targ.aCoords.tl.x;\n            groupTop = top;\n          }\n        }\n      }\n      if (Pieces.isVerticalNeighbours(positionsData)) {\n        const horizontalDiff = Math.abs(activeObject.aCoords.tl.y - targ.aCoords.tl.y);\n        const horizontalPercent = 50;\n\n        if (horizontalDiff < (horizontalPercent / 100) * activeObject.width) {\n          const fromTop = Math.abs(activeObject.aCoords.bl.y - targ.aCoords.tl.y);\n          const fromBottom = Math.abs(activeObject.aCoords.tl.y - targ.aCoords.bl.y);\n\n          if (fromTop < collisionValue) {\n            left = targ.aCoords.bl.x;\n            top = targ.aCoords.tl.y - activeObject.height;\n            groupLeft = left;\n            groupTop = top;\n          } else if (fromBottom < collisionValue) {\n            left = targ.aCoords.bl.x;\n            top = targ.aCoords.bl.y;\n            groupLeft = left;\n            groupTop = targ.aCoords.tl.y;\n          }\n        }\n      }\n\n      if (left || top) {\n        activeObject.left = left;\n        activeObject.top = top;\n      }\n\n      if (groupLeft || groupTop) {\n        const testGroup = new fabric.Group([activeObject, targ], {\n          left: groupLeft,\n          top: groupTop,\n          hasControls: false,\n        });\n\n        canvas.add(testGroup);\n        canvas.remove(activeObject);\n        canvas.remove(targ);\n      }\n    });\n  });\n});\n"]}